/*

GENERAL MIXINS: This project uses Bourbon so you can use any of the Bourbon mixins
http://bourbon.io/

- utility
- setting media

*/



/* ::: HIDING CONTENT ::::::::::::::::::::::::::::::::::::::::: */

	// http://shoptalkshow.com/episodes/058-with-derek-featherstone/  (skip to 32 minutes)
	@mixin hide() {
		display: none;
	}

	// unhide accessible content
	@mixin unhide() {
		position: static;
	}


/* ::: BOURBON NEAT GRID HACKS ::::::::::::::::::::::::::::::::::::::::: */
	
//reset margins when you're changing the column span of a collection
@mixin omega-reset($nth) {
  &:nth-child(#{$nth}) { margin-right: flex-gutter($grid-columns, $gutter); }
  &:nth-child(#{$nth}+1) { clear: none }
}

// these were removed from bourbon for some reason but we still need them

$placeholders: '-webkit-input-placeholder',
'-moz-placeholder',
'-ms-input-placeholder';

@mixin placeholder {
@each $placeholder in $placeholders {
@if $placeholder == "-webkit-input-placeholder" {
&::#{$placeholder} {
@content;
}
}
@else if $placeholder == "-moz-placeholder" {
// FF 18-
&:#{$placeholder} {
@content;
}

// FF 19+
&::#{$placeholder} {
@content;
}
}
@else {
&:#{$placeholder} {
@content;
}
}
}
}
// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.
// Example: @include transition (all, 2.0s, ease-in-out);
// @include transition ((opacity, width), (1.0s, 2.0s), ease-in, (0, 2s));
// @include transition ($property:(opacity, width), $delay: (1.5s, 2.5s));

@mixin transition ($properties...) {
@if length($properties) >= 1 {
@include prefixer(transition, $properties, webkit moz spec);
}

@else {
$properties: all 0.15s ease-out 0;
@include prefixer(transition, $properties, webkit moz spec);
}
}

@mixin transition-property ($properties...) {
-webkit-transition-property: transition-property-names($properties, 'webkit');
-moz-transition-property: transition-property-names($properties, 'moz');
transition-property: transition-property-names($properties, false);
}

@mixin transition-duration ($times...) {
@include prefixer(transition-duration, $times, webkit moz spec);
}

@mixin transition-timing-function ($motions...) {
// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()
@include prefixer(transition-timing-function, $motions, webkit moz spec);
}

@mixin transition-delay ($times...) {
@include prefixer(transition-delay, $times, webkit moz spec);
}


