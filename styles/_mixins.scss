/*
MIXINS
*/


/* ::: BREAKPOINT VARIABLES ::::::::::::::::::::::::::::::::::::::::: */

    $small: new-breakpoint(min-width 400px );
    $smallmed: new-breakpoint(min-width 400px );
    $medium: new-breakpoint(min-width 690px);
    $medlrg: new-breakpoint(min-width 800px);
    $large: new-breakpoint(min-width 980px);
    $lrgmega: new-breakpoint(min-width 1200px);
    $mega: new-breakpoint(min-width 1400px);


/* ::: HIDING CONTENT ::::::::::::::::::::::::::::::::::::::::: */

	// http://shoptalkshow.com/episodes/058-with-derek-featherstone/  (skip to 32 minutes)
	@mixin hide() {
		display: none;
	}

	// unhide accessible content
	@mixin unhide() {
		position: static;
	}



// these were removed from bourbon for some reason but we still need them

$placeholders: '-webkit-input-placeholder',
'-moz-placeholder',
'-ms-input-placeholder';

@mixin placeholder {
@each $placeholder in $placeholders {
@if $placeholder == "-webkit-input-placeholder" {
&::#{$placeholder} {
@content;
}
}
@else if $placeholder == "-moz-placeholder" {
// FF 18-
&:#{$placeholder} {
@content;
}

// FF 19+
&::#{$placeholder} {
@content;
}
}
@else {
&:#{$placeholder} {
@content;
}
}
}
}
// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.
// Example: @include transition (all, 2.0s, ease-in-out);
// @include transition ((opacity, width), (1.0s, 2.0s), ease-in, (0, 2s));
// @include transition ($property:(opacity, width), $delay: (1.5s, 2.5s));

@mixin transition ($properties...) {
@if length($properties) >= 1 {
@include prefixer(transition, $properties, webkit moz spec);
}

@else {
$properties: all 0.15s ease-out 0;
@include prefixer(transition, $properties, webkit moz spec);
}
}

@mixin transition-property ($properties...) {
-webkit-transition-property: transition-property-names($properties, 'webkit');
-moz-transition-property: transition-property-names($properties, 'moz');
transition-property: transition-property-names($properties, false);
}

@mixin transition-duration ($times...) {
@include prefixer(transition-duration, $times, webkit moz spec);
}

@mixin transition-timing-function ($motions...) {
// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()
@include prefixer(transition-timing-function, $motions, webkit moz spec);
}

@mixin transition-delay ($times...) {
@include prefixer(transition-delay, $times, webkit moz spec);
}


